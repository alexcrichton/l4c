//test return 8

class String {
  int length;
  int[] bytes;

  String();
  int print();
  String* append(int c);
  String* concat(String *other);
  String* sub(int start);
  String* substr(int start, int len);
};

String* clone(String *src, int newlen) {
  String *other = new String();
  other->length = newlen;
  other->bytes  = alloc_array(int, newlen);
  for (int i = 0; i < newlen; i++) {
    other->bytes[i] = src->bytes[i];
  }
  return other;
}

String::String() {}

int String::print() {
  int i;
  for (i = 0; i < length; i++) {
    printchar(bytes[i]);
  }
  return i;
}

String* String::append(int c) {
  String *other = clone(this, length + 1);
  other->bytes[length] = c;
  return other;
}

String* String::concat(String *other) {
  int i;
  String *newstr = clone(this, other->length + length);
  for (i = 0; i < length; i++) {
    newstr->bytes[i] = bytes[i];
  }
  for (; i < newstr->length; i++) {
    newstr->bytes[i] = other->bytes[i - length];
  }
  return newstr;
}

String* String::sub(int start) {
  String *newstr = clone(this, length - start);
  for (int i = start; i < length; i++) {
    newstr->bytes[i - start] = bytes[i];
  }
  return newstr;
}

String* String::substr(int start, int len) {
  String *newstr = clone(this, len);
  for (int i = start; i < start + len; i++) {
    newstr->bytes[i - start] = bytes[i];
  }
  return newstr;
}

int main() {
  String *s = new String();
  s = s->append(0x61); // 'a'
  s = s->append(0x62); // 'b'
  s = s->append(0x63); // 'c'
  s = s->append(0x0a); // '\n'
  s->print();
  s = s->concat(s);
  s->print();

  s->sub(2)->print();
  s->substr(1, 3)->print();

  return s->length;
}
