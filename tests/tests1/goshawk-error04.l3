//test error
//make sure we can't define a function twice

// Checks to see if x is a palindrome by comparing the most and least
// significant digit, then calling the function recursively without those
// digits
bool isPalindrome(int x)
{
    // All one digit numbers are palindromes
    if (x / 10 == 0) {
        return true;
    }

    int leastSigDigit = x % 10;
    //int mostSigDigit = leastSigDigit;

    // Calculate everything except the most and least significant digit
    // to recurse.  Digits will be reversed, but that's fine.
    int y = x / 10;
    int z = 0;

    while (y / 10 > 0) {
        z += (y % 10);
        z *= 10;
        y /= 10;
    }

    int mostSigDigit = y;

    if (mostSigDigit != leastSigDigit) {
        return false;
    }

    return isPalindrome(z / 10);
}

// TODO:  Fill in function!!!
bool isPalindrome(int x)
{
    return true;
}

int main()
{
    int number = readint();
    if (isPalindrome(number)) {
        //return a good palindrome
        return 121;
    } else {
        //return a good non-palindrome
        return 123;
    }
}
