#[link(name = "l4c")];
#[deny(implicit_copies)];
#[deny(non_implicitly_copyable_typarams)];

extern mod std;
use core::util::*;

trait PrettyPrint {
  fn pp() -> ~str;
}

mod front {
  mod mark;
  mod parse;
  mod pp;
  mod symbol;
  pub mod ast;
  pub mod error;
}
mod analysis {
  mod initcheck;
  mod maincheck;
  mod returncheck;
  mod typecheck;
}
mod middle {
  mod graph;
  mod ir;
  mod label;
  mod temp;
  mod trans;
}

fn main() {
  use front::*;
  use middle::*;

  let a = os::args();
  if a.len() == 1 {
    fail(~"need at least one file as an argument");
  }

  let file = copy a[1];
  let {status, out, _} = run::program_output("parse/parser", [file]);
  if status != 0 {
    io::print(out);
    fail(~"Failed to parse the given file");
  }

  let ast = parse::from_str(out).elaborate();
  analysis::typecheck::check(&ast);
  analysis::returncheck::check(&ast);
  analysis::maincheck::check(&ast);
  analysis::initcheck::check(&ast);

  let ir = trans::translate(&ast, true);
  ir.pp(io::stdout());
}
