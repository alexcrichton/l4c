//test return 0

//Swap the i-th and j-th bits of a value (i and j are counted from the right).
//Return x if i or j is not between 0 and 31
int swap(int x, int i, int j)
{
    int mask;
    int ibit;
    int jbit;
    
    if (i < 0 || i > 31 || j < 0 || j > 31)
        return x;
    
	mask = 1;

	//Get bits to swap
	ibit = (x & (mask << i)) >> i;
	jbit = (x & (mask << j)) >> j;

    //Clear the swapped bytes
    mask = (mask << i) | (mask << j);
    x = x & ~mask;
    
    //Swap the bytes and add them back to x
    mask = (ibit << j) | (jbit << i);
    x = x | mask;
    
    return x;
}

int main()
{
    int x = swap(0x10, 1, 4);
	if(x == 0x2)
		return 0;
	else
		return -1;
}
