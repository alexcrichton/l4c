//test return 31

bool is_prime(int n) {
    int i;
    if (n % 2 == 0) {
        return false;
    }
    i = 3;
    while (i*i < n) {
        if (n % i == 0) {
            return false;
        }
        i += 2;
    }
    return true;
}

int get_prime_helper(int start, int n) {
    int curr_num = start;
    while (!is_prime(curr_num)) {
        curr_num += 2;
    }
    if (n == 0) {
        return curr_num;
    }
    return get_prime_helper(curr_num + 2, n - 1);
}

int get_nth_prime(int n) {
    if (n <= 0) {
        return -1;
    }
    else if (n == 1) {
        return 2;
    }
    else {
        return get_prime_helper(3, n - 1);
    }
}

int main() {
    return get_nth_prime(12);
}
