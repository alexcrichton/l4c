//test return 191
// returns the tenth palindromic prime.

int digit(int num, int place) {
  int i = 0;
  for ( ; i < place; i++) {
    num = num / 10;
  }
  return num % 10;
}

int length(int n) {
  int l = 0;
  if (n == 0) {
    return 1;
  }

  while (n > 0) {
    l += 1;
    n = n / 10;
  }
  return l;
}

bool isPalindrome(int num) {
  int l = length(num);
  int i = 0;
  for ( ; i < l; i++) {
    if (digit(num, i) != digit(num, l - 1 - i)) {
      return false; 
    }
  }
  return true;
}

bool isPrime(int num) {
  int i = 2;
  if (num < 2) {
    return false;
  }
  for ( ; i < num; i++) {
    if (num % i == 0) {
      return false;
    }
  }
  return true;
}

bool isPalindromicPrime(int num) {
  return (isPrime(num) && isPalindrome(num));
}

int nthPalindromicPrime(int n) {
  int num = 0;
  int count = 0;
  if (n <= 0) {
    return -1;
  }
  while (count < n) {
    num++;
    if (isPalindromicPrime(num)) {
      count++;
    }
  }
  return num;
}
int main () {
  return nthPalindromicPrime(10);
}
