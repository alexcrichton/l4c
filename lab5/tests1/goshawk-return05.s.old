.file	"../tests1/goshawk-return05.l4"
.globl _c0_main
_c0_main:
	addq $-40, %rsp
	movq %r14, 8(%rsp)
	movq %r13, 16(%rsp)
	movq %r12, 24(%rsp)
	movq %rbx, 32(%rsp)
.main_0:
	callq readint
	movl %eax, %r9d
	movslq %r9d, %rdi
	movq $8, %rsi
	movq %r9, %rbx
	callq calloc
	movq %rbx, %r9
	movq %rax, %r8
	movl $0, %ecx
.main_8:
.main_1:
	movl $1, %esi
	movl %ecx, %edx
	cmpl %r9d, %edx
	setl %dl
	movzbl %dl, %edx
	cmpl %edx, %esi
	jnz .main_3
.main_2:
	movl %ecx, %edx
	imull $8, %edx
	movslq %edx, %rsi
	movq %r8, %rdx
	addq %rsi, %rdx
	movq $1, %rdi
	movq $8, %rsi
	movq %rdx, %r14
	movq %rcx, %r13
	movq %r8, %r12
	movq %r9, %rbx
	callq calloc
	movq %r14, %rdx
	movq %r13, %rcx
	movq %r12, %r8
	movq %rbx, %r9
	movq %rax, (%rdx)
	movl %ecx, %edx
	imull $8, %edx
	movslq %edx, %rsi
	movq %r8, %rdx
	addq %rsi, %rdx
	movq (%rdx), %rdx
	movq %rdx, %r14
	movq %rcx, %r13
	movq %r8, %r12
	movq %r9, %rbx
	callq readint
	movq %r14, %rdx
	movq %r13, %rcx
	movq %r12, %r8
	movq %rbx, %r9
	movq $0, %rsi
	addq %rsi, %rdx
	movl %eax, (%rdx)
	movl %ecx, %edx
	imull $8, %edx
	movslq %edx, %rsi
	movq %r8, %rdx
	addq %rsi, %rdx
	movq (%rdx), %rdx
	movq %rdx, %r14
	movq %rcx, %r13
	movq %r8, %r12
	movq %r9, %rbx
	callq readint
	movq %r14, %rdx
	movq %r13, %rcx
	movq %r12, %r8
	movq %rbx, %r9
	movq $4, %rsi
	addq %rsi, %rdx
	movl %eax, (%rdx)
	addl $1, %ecx
.main_7:
	jmp .main_1
.main_3:
	movq %r8, %rdi
	movl %r9d, %esi
	movq %r8, %r12
	movq %r9, %rbx
	callq _c0_selection_sort
	movq %r12, %r8
	movq %rbx, %r9
	movl $0, %ecx
.main_10:
.main_4:
	movl $1, %esi
	movl %ecx, %edx
	cmpl %r9d, %edx
	setl %dl
	movzbl %dl, %edx
	cmpl %edx, %esi
	jnz .main_6
.main_5:
	movl $40, %edi
	movq %rcx, %r13
	movq %r8, %r12
	movq %r9, %rbx
	callq printchar
	movq %r13, %rcx
	movq %r12, %r8
	movq %rbx, %r9
	movl %ecx, %edx
	imull $8, %edx
	movslq %edx, %rsi
	movq %r8, %rdx
	addq %rsi, %rdx
	movq (%rdx), %rdx
	movq $0, %rsi
	addq %rsi, %rdx
	movl (%rdx), %edx
	movl %edx, %edi
	movq %rcx, %r13
	movq %r8, %r12
	movq %r9, %rbx
	callq printint
	movq %r13, %rcx
	movq %r12, %r8
	movq %rbx, %r9
	movl $44, %edi
	movq %rcx, %r13
	movq %r8, %r12
	movq %r9, %rbx
	callq printchar
	movq %r13, %rcx
	movq %r12, %r8
	movq %rbx, %r9
	movl $32, %edi
	movq %rcx, %r13
	movq %r8, %r12
	movq %r9, %rbx
	callq printchar
	movq %r13, %rcx
	movq %r12, %r8
	movq %rbx, %r9
	movl %ecx, %edx
	imull $8, %edx
	movslq %edx, %rsi
	movq %r8, %rdx
	addq %rsi, %rdx
	movq (%rdx), %rdx
	movq $4, %rsi
	addq %rsi, %rdx
	movl (%rdx), %edx
	movl %edx, %edi
	movq %rcx, %r13
	movq %r8, %r12
	movq %r9, %rbx
	callq printint
	movq %r13, %rcx
	movq %r12, %r8
	movq %rbx, %r9
	movl $41, %edi
	movq %rcx, %r13
	movq %r8, %r12
	movq %r9, %rbx
	callq printchar
	movq %r13, %rcx
	movq %r12, %r8
	movq %rbx, %r9
	movl $10, %edi
	movq %rcx, %r13
	movq %r8, %r12
	movq %r9, %rbx
	callq printchar
	movq %r13, %rcx
	movq %r12, %r8
	movq %rbx, %r9
	addl $1, %ecx
.main_9:
	jmp .main_4
.main_6:
	movl %r9d, %eax
	movq 8(%rsp), %r14
	movq 16(%rsp), %r13
	movq 24(%rsp), %r12
	movq 32(%rsp), %rbx
	addq $40, %rsp
	ret
_c0_selection_sort:
	addq $-72, %rsp
	movq %rbp, 8(%rsp)
	movq %r15, 16(%rsp)
	movq %r14, 24(%rsp)
	movq %r13, 32(%rsp)
	movq %r12, 40(%rsp)
	movq %rbx, 48(%rsp)
	movq %rdi, %r8
	movl %esi, %ebx
.selection_sort_0:
	movl $0, %ecx
.selection_sort_11:
.selection_sort_1:
	movl $1, %esi
	movl %ecx, %edx
	cmpl %ebx, %edx
	setl %dl
	movzbl %dl, %edx
	cmpl %edx, %esi
	jnz .selection_sort_9
.selection_sort_2:
	movl %ecx, %edx
	imull $8, %edx
	movslq %edx, %rsi
	movq %r8, %rdx
	addq %rsi, %rdx
	movq (%rdx), %rdx
	movq %rdx, %rsi
	movl %ecx, %edi
	movl %ecx, %edx
	addl $1, %edx
.selection_sort_13:
	movl %edx, %r14d
	movl %edi, %edx
	movq %rsi, %r12
.selection_sort_3:
	movl $1, %edi
	movl %r14d, %esi
	cmpl %ebx, %esi
	setl %sil
	movzbl %sil, %esi
	cmpl %esi, %edi
	jnz .selection_sort_8
.selection_sort_4:
	movl %r14d, %esi
	imull $8, %esi
	movslq %esi, %rdi
	movq %r8, %rsi
	addq %rdi, %rsi
	movq (%rsi), %r13
	movq %r13, %rdi
	movq %r12, %rsi
	movq %rdx, 56(%rsp)
	movq %rcx, 64(%rsp)
	movq %r8, %rbp
	movq %r9, %r15
	callq _c0_compare
	movq 56(%rsp), %rdx
	movq 64(%rsp), %rcx
	movq %rbp, %r8
	movq %r15, %r9
	movl %eax, %r15d
	movl $1, %eax
	movl $0, %edi
	movl %r15d, %esi
	cmpl %edi, %esi
	setl %sil
	movzbl %sil, %esi
	cmpl %esi, %eax
	jnz .selection_sort_6
.selection_sort_5:
	movl %r14d, %r9d
	imull $8, %r9d
	movslq %r9d, %rdx
	movq %r8, %r9
	addq %rdx, %r9
	movq (%r9), %rsi
	movq %rsi, %rdx
	movl %r14d, %r9d
.selection_sort_15:
	movq %rsi, %rdi
	movl %r9d, %eax
	movq %rdx, %rsi
.selection_sort_7:
	movl %r14d, %edx
	addl $1, %edx
.selection_sort_12:
	movq %rdi, %r9
	movl %edx, %r14d
	movl %eax, %edx
	movq %rsi, %r12
	jmp .selection_sort_3
.selection_sort_6:
.selection_sort_14:
	movq %r9, %rdi
	movl %edx, %eax
	movq %r12, %rsi
	jmp .selection_sort_7
.selection_sort_8:
	movq %r8, %rdi
	movl %ecx, %esi
	movq %rcx, %r14
	movq %r8, %r13
	movq %r9, %r12
	callq _c0_swap
	movq %r14, %rcx
	movq %r13, %r8
	movq %r12, %r9
	addl $1, %ecx
.selection_sort_10:
	jmp .selection_sort_1
.selection_sort_9:
	movl $0, %eax
	movq 8(%rsp), %rbp
	movq 16(%rsp), %r15
	movq 24(%rsp), %r14
	movq 32(%rsp), %r13
	movq 40(%rsp), %r12
	movq 48(%rsp), %rbx
	addq $72, %rsp
	ret
_c0_compare:
	addq $-8, %rsp
	movq %rdi, %r9
	movq %rsi, %rdi
.compare_0:
	movq $0, %rcx
	movq %r9, %r8
	addq %rcx, %r8
	movl (%r8), %esi
	movq $0, %rcx
	movq %rdi, %r8
	addq %rcx, %r8
	movl (%r8), %edx
	movl $1, %ecx
	movl %esi, %r8d
	cmpl %edx, %r8d
	setne %r8b
	movzbl %r8b, %r8d
	cmpl %r8d, %ecx
	jnz .compare_2
.compare_1:
	movq $0, %r8
	addq %r8, %r9
	movl (%r9), %ecx
	movq $0, %r8
	movq %rdi, %r9
	addq %r8, %r9
	movl (%r9), %r8d
	movl %ecx, %eax
	subl %r8d, %eax
	addq $8, %rsp
	ret
.compare_2:
	movq $4, %r8
	addq %r8, %r9
	movl (%r9), %ecx
	movq $4, %r8
	movq %rdi, %r9
	addq %r8, %r9
	movl (%r9), %r8d
	movl %ecx, %eax
	subl %r8d, %eax
	addq $8, %rsp
	ret
_c0_swap:
	addq $-24, %rsp
	movq %r12, 8(%rsp)
	movq %rbx, 16(%rsp)
	movq %rdi, %r9
	movl %esi, %r8d
	movl %edx, %r12d
.swap_0:
	movl %r8d, %ecx
	imull $8, %ecx
	movslq %ecx, %rdx
	movq %r9, %rcx
	addq %rdx, %rcx
	movq (%rcx), %rcx
	movq $0, %rdx
	addq %rdx, %rcx
	movl (%rcx), %ecx
	movl %ecx, %ebx
	movl %r8d, %ecx
	imull $8, %ecx
	movslq %ecx, %rdx
	movq %r9, %rcx
	addq %rdx, %rcx
	movq (%rcx), %rcx
	movq $4, %rdx
	addq %rdx, %rcx
	movl (%rcx), %ecx
	movl %ecx, %eax
	movl %r8d, %ecx
	imull $8, %ecx
	movslq %ecx, %rdx
	movq %r9, %rcx
	addq %rdx, %rcx
	movq (%rcx), %rdi
	movl %r12d, %ecx
	imull $8, %ecx
	movslq %ecx, %rdx
	movq %r9, %rcx
	addq %rdx, %rcx
	movq (%rcx), %rcx
	movq $0, %rdx
	addq %rdx, %rcx
	movl (%rcx), %esi
	movq $0, %rdx
	movq %rdi, %rcx
	addq %rdx, %rcx
	movl %esi, (%rcx)
	imull $8, %r8d
	movslq %r8d, %rcx
	movq %r9, %r8
	addq %rcx, %r8
	movq (%r8), %rsi
	movl %r12d, %r8d
	imull $8, %r8d
	movslq %r8d, %rcx
	movq %r9, %r8
	addq %rcx, %r8
	movq (%r8), %r8
	movq $4, %rcx
	addq %rcx, %r8
	movl (%r8), %edx
	movq $4, %rcx
	movq %rsi, %r8
	addq %rcx, %r8
	movl %edx, (%r8)
	movl %r12d, %r8d
	imull $8, %r8d
	movslq %r8d, %rcx
	movq %r9, %r8
	addq %rcx, %r8
	movq (%r8), %r8
	movq $0, %rcx
	addq %rcx, %r8
	movl %ebx, (%r8)
	movl %r12d, %r8d
	imull $8, %r8d
	movslq %r8d, %r8
	addq %r8, %r9
	movq (%r9), %r9
	movq $4, %r8
	addq %r8, %r9
	movl %eax, (%r9)
	movl $0, %eax
	movq 8(%rsp), %r12
	movq 16(%rsp), %rbx
	addq $24, %rsp
	ret
.ident	"15-411 L4 reference compiler"
