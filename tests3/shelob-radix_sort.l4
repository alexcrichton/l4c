//test return 0
int sort_digit(int[] a, int len, int bit) {
	int[] a0 = alloc_array(int,len);
	int[] a1 = alloc_array(int,len);
	int i = 0;
	int j = 0;
	int k;
	for (k = 0; k < len; k++)
	if ((a[k] & (1 << bit)) == 0) {
		a0[i] = a[k];
		i++;
	} else {
		a1[j] = a[k];
		j++;
	}
	for (k = 0; k < i; k++)
	a[k] = a0[k];
	for (k = i; k < len; k++)
	a[k] = a1[k - i];
	return 0;
}

int radix_sort(int[] a, int len) {
	for (int i = 0; i < 32; i++)
	sort_digit(a, len, i);
	return 0;
}

int[] fill(int len){
	int[] a=alloc_array(int,len);
	
	for(int i=0;i<len;i++)
		a[i]=readint();
	
	return a;
}

int main() {
	int len = readint();
	int[] a=fill(len);
	radix_sort(a, len);
	for (int i = 0; i < len; i++) {
		printint(a[i]);
		printchar(0xa);
	}
	return 0;
}
